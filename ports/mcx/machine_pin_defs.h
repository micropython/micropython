/*
 * This file is part of the MicroPython project, http://micropython.org/
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2024 NXP
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#ifndef MP_PORT_MCX_MACHINE_PIN_DEFS_H
#define MP_PORT_MCX_MACHINE_PIN_DEFS_H

typedef enum {
    MACHINE_PIN_AF_TYPE_GPIO = 0U, /* GPIO        */
    MACHINE_PIN_AF_TYPE_LPFC,      /* LP_FLEXCOMM */
    MACHINE_PIN_AF_TYPE_UART,      /* LPUART      */
    MACHINE_PIN_AF_TYPE_CT32,      /* CTIMER      */
} machine_pin_af_type_t;

typedef enum {
    MACHINE_PIN_AF_ATTR_GPIO_P0 = 0U,
    MACHINE_PIN_AF_ATTR_GPIO_P1,
    MACHINE_PIN_AF_ATTR_GPIO_P2,
    MACHINE_PIN_AF_ATTR_GPIO_P3,
    MACHINE_PIN_AF_ATTR_GPIO_P4,
    MACHINE_PIN_AF_ATTR_GPIO_P5,
    MACHINE_PIN_AF_ATTR_GPIO_P6,
    MACHINE_PIN_AF_ATTR_GPIO_P7,
    MACHINE_PIN_AF_ATTR_GPIO_P8,
    MACHINE_PIN_AF_ATTR_GPIO_P9,
    MACHINE_PIN_AF_ATTR_GPIO_P10,
    MACHINE_PIN_AF_ATTR_GPIO_P11,
    MACHINE_PIN_AF_ATTR_GPIO_P12,
    MACHINE_PIN_AF_ATTR_GPIO_P13,
    MACHINE_PIN_AF_ATTR_GPIO_P14,
    MACHINE_PIN_AF_ATTR_GPIO_P15,
    MACHINE_PIN_AF_ATTR_GPIO_P16,
    MACHINE_PIN_AF_ATTR_GPIO_P17,
    MACHINE_PIN_AF_ATTR_GPIO_P18,
    MACHINE_PIN_AF_ATTR_GPIO_P19,
    MACHINE_PIN_AF_ATTR_GPIO_P20,
    MACHINE_PIN_AF_ATTR_GPIO_P21,
    MACHINE_PIN_AF_ATTR_GPIO_P22,
    MACHINE_PIN_AF_ATTR_GPIO_P23,
    MACHINE_PIN_AF_ATTR_GPIO_P24,
    MACHINE_PIN_AF_ATTR_GPIO_P25,
    MACHINE_PIN_AF_ATTR_GPIO_P26,
    MACHINE_PIN_AF_ATTR_GPIO_P27,
    MACHINE_PIN_AF_ATTR_GPIO_P28,
    MACHINE_PIN_AF_ATTR_GPIO_P29,
    MACHINE_PIN_AF_ATTR_GPIO_P30,
    MACHINE_PIN_AF_ATTR_GPIO_P31,

    MACHINE_PIN_AF_ATTR_LPFC_P0 = 0U,
    MACHINE_PIN_AF_ATTR_LPFC_P1,
    MACHINE_PIN_AF_ATTR_LPFC_P2,
    MACHINE_PIN_AF_ATTR_LPFC_P3,
    MACHINE_PIN_AF_ATTR_LPFC_P4,
    MACHINE_PIN_AF_ATTR_LPFC_P5,
    MACHINE_PIN_AF_ATTR_LPFC_P6,

    MACHINE_PIN_AF_ATTR_CT32_MAT0 = 0U,
    MACHINE_PIN_AF_ATTR_CT32_MAT1,
    MACHINE_PIN_AF_ATTR_CT32_MAT2,
    MACHINE_PIN_AF_ATTR_CT32_MAT3,

    MACHINE_PIN_AF_ATTR_CT32_INP0  = (0x80U | 0U), /* Special mark */
    MACHINE_PIN_AF_ATTR_CT32_INP1  = (0x80U | 1U),
    MACHINE_PIN_AF_ATTR_CT32_INP2  = (0x80U | 2U),
    MACHINE_PIN_AF_ATTR_CT32_INP3  = (0x80U | 3U),
    MACHINE_PIN_AF_ATTR_CT32_INP4  = (0x80U | 4U),
    MACHINE_PIN_AF_ATTR_CT32_INP5  = (0x80U | 5U),
    MACHINE_PIN_AF_ATTR_CT32_INP6  = (0x80U | 6U),
    MACHINE_PIN_AF_ATTR_CT32_INP7  = (0x80U | 7U),
    MACHINE_PIN_AF_ATTR_CT32_INP8  = (0x80U | 8U),
    MACHINE_PIN_AF_ATTR_CT32_INP9  = (0x80U | 9U),
    MACHINE_PIN_AF_ATTR_CT32_INP10 = (0x80U | 10U),
    MACHINE_PIN_AF_ATTR_CT32_INP11 = (0x80U | 11U),
    MACHINE_PIN_AF_ATTR_CT32_INP12 = (0x80U | 12U),
    MACHINE_PIN_AF_ATTR_CT32_INP13 = (0x80U | 13U),
    MACHINE_PIN_AF_ATTR_CT32_INP14 = (0x80U | 14U),
    MACHINE_PIN_AF_ATTR_CT32_INP15 = (0x80U | 15U),
    MACHINE_PIN_AF_ATTR_CT32_INP16 = (0x80U | 16U),
    MACHINE_PIN_AF_ATTR_CT32_INP17 = (0x80U | 17U),
    MACHINE_PIN_AF_ATTR_CT32_INP18 = (0x80U | 18U),
    MACHINE_PIN_AF_ATTR_CT32_INP19 = (0x80U | 19U),
} machine_pin_af_attr_t;

#endif
